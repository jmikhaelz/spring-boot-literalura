services:
  db:
    image: postgres:16
    container_name: gutendex_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - demo_net

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin_gutendex
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - db
    networks:
      - demo_net

volumes:
  pgdata:
    name: gutendex_data
  pgadmin_data:
    name: gutendex_config

networks:
  demo_net:
    name: gutendex_network

##IMPORTANTE : Para la ejecucion debes estar adentro del directorio de archivo yml
##  Ejecutar docker-composer en segundo plano
##   docker-composer up -d
##  Detener compose
##  docker-compose down